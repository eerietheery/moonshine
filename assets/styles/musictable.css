@media (max-width: 700px) {
  .col-actions {
    width: 90px;
    min-width: 90px;
    max-width: 90px;
  }
  
  .track-actions {
    justify-content: flex-end;
    gap: 2px; /* Even smaller gap for very small screens */
    padding: 0 6px;
    width: 90px; /* Further reduced width */
    min-width: 90px;
    max-width: 90px;
  }
  
  .track-actions button {
    min-width: 22px;
    max-width: 22px;
    height: 22px;
    padding: 2px;
  }
  
  .track-actions button img {
    width: 16px !important;
    height: 16px !important;
  }
  
  .track-title {
    gap: 6px;
    padding: 0 8px;
  }
  .table-header, .track {
    font-size: 0.85rem;
  }
}
/* ===== MUSIC TABLE ===== */
#music-table {
  flex: 1;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  width: 100%;
}

.table-header {
  background: var(--surface-1);
  border-bottom: 1px solid var(--border);
  padding: 0;
  display: grid;
  /* Use CSS variable set by JS (fallback to sensible defaults) */
  grid-template-columns: var(--music-grid-template, 3fr 2fr 2fr 1fr 1fr 140px);
  gap: 0;
  font-weight: 600;
  font-size: 0.9rem;
  color: var(--text-muted);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  width: 100%;
  box-sizing: border-box;
  overflow-x: auto; /* allow scrollLeft sync without showing visible scrollbar */
  overflow-y: hidden;
  -ms-overflow-style: none;     /* IE/Edge */
  scrollbar-width: none;        /* Firefox */
}

/* Hide WebKit scrollbars for header */
.table-header::-webkit-scrollbar { display: none; }

/* When code adds the `hidden` class we want the header fully removed from layout
   (playlist browse/selected mode uses this class). Use !important to guard
   against inline styles set elsewhere. */
#music-table .table-header.hidden {
  display: none !important;
}

/* Prefer body class toggle for stronger intent-based hiding */
body.playlists-active #music-table-header { display: none !important; }

.col-title, .col-artist, .col-album, .col-year, .col-genre, .col-bitrate {
  cursor: pointer;
  transition: color 0.15s;
  padding: 12px 16px;
  /* Remove vertical separators to simplify look and match rows */
  border-right: none;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  position: relative;
}

.col-title:hover, .col-artist:hover, .col-album:hover, .col-year:hover, .col-genre:hover {
  color: var(--accent);
}

.col-genre { border-right: none; }

/* Column resizer handle */
.table-header .col-resizer {
  position: absolute;
  top: 0;
  right: 0;
  width: 8px;
  height: 100%;
  cursor: col-resize;
  /* subtle visual affordance */
  background: transparent;
}
.table-header .col-resizer::after {
  content: '';
  position: absolute;
  top: 20%;
  bottom: 20%;
  left: 3px;
  width: 2px;
  border-radius: 1px;
  background: var(--border);
  opacity: 0.0;
  transition: opacity .15s ease;
}
.table-header .sort-header:hover .col-resizer::after,
.table-header .col-resizer:active::after {
  opacity: 0.7;
}

.col-year, .col-genre {
  justify-content: center;
}

#music-list {
  flex: 1;
  overflow-y: auto;
  overflow-x: auto; /* allow horizontal scrolling when columns exceed viewport */
  /* Prevent horizontal layout shift when scrollbar appears/disappears */
  scrollbar-gutter: stable both-edges;
  position: relative;
  width: 100%;
}

.track {
  display: grid;
  /* Use the same grid template as the header via CSS variable */
  grid-template-columns: var(--music-grid-template, 3fr 2fr 2fr 1fr 1fr 140px);
  gap: 0;
  align-items: center;
  padding: 0;
  border-bottom: 1px solid var(--border);
  cursor: pointer;
  transition: background 0.15s;
  height: 56px;
  box-sizing: border-box;
  width: 100%;
  /* Ensure grid items don't overflow */
  overflow: hidden;
}

/* Ensure header and rows expand only when needed; no extra scroll when there's space */
#music-table .table-header, #music-list .track {
  width: max(100%, var(--music-grid-min-width, 100%));
}

/* Force the last child (actions) to occupy the last defined grid column */
.track > :last-child {
  grid-column: -2 / -1; /* Start at the second-to-last line and end at the last line */
}

.track:hover {
  background: var(--accent);
  color: var(--accent-contrast);
}

.track.playing {
  background: var(--state-active);
  /* Replace left border (which shifts grid content) with an inset glow */
  box-shadow: inset 4px 0 0 0 var(--accent);
}

.track-title {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 0 16px;
  box-sizing: border-box;
  min-width: 0;
  flex: 1 1 0;
}

.track-name {
  font-weight: 500;
  color: var(--text-strong);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  min-width: 0;
  flex: 1 1 0;
}

.album-art {
  width: 40px;
  height: 40px;
  border-radius: 4px;
  object-fit: cover;
  background: #333;
  flex-shrink: 0;
}

.track-name {
  font-weight: 500;
  color: var(--text-strong);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.track-artist, .track-album, .track-year, .track-genre, .track-bitrate {
  color: var(--text-muted);
  font-size: 0.9rem;
  padding: 0 16px;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* Make row cells mirror header border style so text aligns horizontally */
.track-title, .track-artist, .track-album, .track-year, .track-genre { border-right: none; }
.track-genre { border-right: none; }

.track-artist, .track-album {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.track-year, .track-genre { justify-content: center; }
.track-bitrate { justify-content: flex-start; text-align: left; }

.col-bitrate {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  text-align: left;
}

/* Actions column */
.col-actions, .track-actions {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: 8px;
  padding: 0 12px;
  box-sizing: border-box;
  min-width: var(--actions-width, 140px); /* Ensure stable minimum width */
  flex-shrink: 0; /* Prevent column from shrinking */
}

/* Header actions column */
.col-actions {
  position: sticky;
  right: 0; /* Stick to right edge */
  background: var(--surface-1); /* Match header background */
  z-index: 10; /* Ensure it stays above content */
  width: var(--actions-width, 140px); /* Match track actions width */
  min-width: var(--actions-width, 140px);
  max-width: var(--actions-width, 140px);
  display: flex;
  align-items: center;
  justify-content: flex-end; /* right-align header actions to match rows */
}

/* Add a subtle visual indicator for the actions column header */
/* keep header simple; don't add pseudo-content that affects alignment */

.track-actions {
  position: relative;
  width: var(--actions-width, 140px); /* Fixed width to match grid template */
}

/* Ensure all three buttons are consistently positioned */
.track-actions .favorite-btn {
  order: 1; /* First button */
}

.track-actions .queue-add-btn {
  order: 2; /* Second button */
}

.track-actions .playlist-add-btn {
  order: 3; /* Third button */
}

.track-actions button {
  background: none;
  border: none;
  color: #b3b3b3;
  cursor: pointer;
  font-size: 0.9rem;
  padding: 0; /* remove inherited padding that caused misalignment */
  margin: 0;
  max-width: 28px;
  min-width: 28px; /* Ensure consistent button width */
  height: 28px; /* Ensure consistent button height */
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0; /* Prevent buttons from shrinking */
}

/* Ensure button images stay consistent */
.track-actions button img {
  pointer-events: none; /* Prevent image from interfering with button clicks */
  transition: filter 0.2s ease;
}

.track-actions button:hover img, .track-actions button:hover {
  filter: drop-shadow(0 0 4px var(--accent)) saturate(2);
  color: var(--text-strong);
}